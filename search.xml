<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Hello_Atom]]></title>
      <url>/Hello/Hello-Atom/</url>
      <content type="html"><![CDATA[<a id="more"></a>
<hr>
<p><strong><em>Article introduction</em></strong>:This article is to show something I want to say about Atom!</p>
<hr>
<h1 id="关于使用Atom的链接："><a href="#关于使用Atom的链接：" class="headerlink" title="关于使用Atom的链接："></a>关于使用Atom的链接：</h1><ul>
<li><a href="http://flight-manual.atom.io/getting-started/" target="_blank" rel="external"><code>Atom</code>官方文档（en)</a></li>
<li><a href="https://atom-china.org/t/atom/62" target="_blank" rel="external"><code>Atom China</code>翻译的官方手册中的<code>Atom 基础使用</code></a><h1 id="个性快捷键"><a href="#个性快捷键" class="headerlink" title="个性快捷键"></a>个性快捷键</h1>不包含常用的简单快捷键。<h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2></li>
<li><code>Alt+Cmd+S</code> to save <em>all the open files</em> in Atom.</li>
<li><code>Cmd+Shift+O</code> to add <em>Project Folder</em>.<h2 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h2></li>
<li><code>Cmd+Shift+P</code> to show <em>Command Palette</em>.<h2 id="搜索文件以切换"><a href="#搜索文件以切换" class="headerlink" title="搜索文件以切换"></a>搜索文件以切换</h2></li>
<li><code>Cmd+B</code> to search through only the <em>files currently opened</em>(“buffers” or open files).</li>
<li><code>Cmd+Shift+B</code> to search only through the files which are <code>new</code> or have <code>been modified since your last Git commit</code>.<h2 id="在Atom中移动光标"><a href="#在Atom中移动光标" class="headerlink" title="在Atom中移动光标"></a>在Atom中移动<code>光标</code></h2></li>
<li><code>Alt+Left</code> or <code>Alt+B</code> - Move to the beginning of word.</li>
<li><code>Alt+Right</code> or <code>Alt+F</code> - Move to the end of word.</li>
<li><code>Cmd+Left</code> or <code>Ctrl+A</code> - Move to the first character of the current line.</li>
<li><code>Cmd+Right</code> or <code>Ctrl+E</code> - Move to the end of the line.</li>
<li><code>Cmd+Up</code> - Move to the top of the file.</li>
<li><code>Cmd+Down</code> - Move to the bottom of the file.</li>
<li><code>Ctrl+G</code> - “row:column” to jump to ‘row’ line ‘column’. character.</li>
<li><code>Cmd+R</code> - to jump to a symbol such as a method definition.</li>
<li><code>Cmd+F2</code> - to toggle a “bookmark” on the current line.</li>
<li><code>Ctrl+F2</code> - jump to a “bookmark”.<h2 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h2></li>
<li><code>Ctrl+L</code> - to select the entire line.</li>
<li><code>Ctrl+Shift+W</code> - to select the current word.<h2 id="在Atom中操作整行"><a href="#在Atom中操作整行" class="headerlink" title="在Atom中操作整行"></a>在Atom中操作<code>整行</code></h2></li>
<li><code>Cmd+Ctrl+Up/Down</code> - to move the current line up or down.</li>
<li><code>Cmd+Shift+D</code> - Duplicate the current line.<h2 id="对当前单词的大小写进行转换"><a href="#对当前单词的大小写进行转换" class="headerlink" title="对当前单词的大小写进行转换"></a>对当前单词的大小写进行转换</h2></li>
<li><code>Cmd+K</code> <code>Cmd+U</code> - to upper case the current word.</li>
<li><code>Cmd+K</code> <code>Cmd+L</code> - to lower case the current word.<h2 id="多光标选择"><a href="#多光标选择" class="headerlink" title="多光标选择"></a>多光标选择</h2></li>
<li><code>Cmd+Click</code> - Add a new cursor at the clicked location.</li>
<li><code>Ctrl+Shift+Up/Down</code> - Add another cursor above/below the current cursor.</li>
<li><code>Cmd+D</code> - Select the next word in the document that is the same as the currently selected word.</li>
<li><code>Cmd+Ctrl+G</code> - Select all words in the document that are the same as the currently selected word.</li>
<li><code>Cmd+Shift+L</code> - Convert a multi-line selection into multiple cursors.</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Hello </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hello </tag>
            
            <tag> Atom </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Codewars_20170506]]></title>
      <url>/Code/Codewars-20170506/</url>
      <content type="html"><![CDATA[<a id="more"></a>
<hr>
<p><strong><em>Article introduction</em></strong>:This is a article to list Kata in Codewars with my remark that I think it is amazing! All of following Python code is running by Python2.7!</p>
<hr>
<h1 id="First-Kata-Don’t-rely-on-luck-6kyu"><a href="#First-Kata-Don’t-rely-on-luck-6kyu" class="headerlink" title="First Kata: Don’t rely on luck.6kyu"></a>First Kata: Don’t rely on luck.<code>6kyu</code></h1><h2 id="Train-details"><a href="#Train-details" class="headerlink" title="Train details:"></a>Train details:</h2><p>请猛戳下方链接看题：</p>
<p><a href="https://www.codewars.com/kata/dont-rely-on-luck/" target="_blank" rel="external">https://www.codewars.com/kata/dont-rely-on-luck/</a></p>
<h2 id="My-solution"><a href="#My-solution" class="headerlink" title="My solution:"></a>My solution:</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">guess = <span class="number">1</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">randint</span> <span class="params">(h,a)</span>:</span></div><div class="line">    <span class="keyword">return</span> <span class="number">1</span></div></pre></td></tr></table></figure>
<p><strong><em>remark</em></strong>:题目中通过<code>from random import randint</code>语句来引入<code>randint</code>，所以巧妙利用了调用时候直接使用<code>randint</code>来调用的漏洞！</p>
<h2 id="Amazing-solution-1"><a href="#Amazing-solution-1" class="headerlink" title="Amazing solution 1:"></a>Amazing solution 1:</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">randint,guess=<span class="keyword">lambda</span> x,y:<span class="number">666</span>,<span class="number">666</span></div></pre></td></tr></table></figure>
<p>&amp;<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">guess, randint = <span class="number">10</span>, <span class="keyword">lambda</span> *a: guess</div></pre></td></tr></table></figure></p>
<p><strong><em>remark</em></strong>:第一个solution中，逗号操作符，以及lambda匿名函数的妙用。果真666！第二个solution更666，直接把<code>lambda</code>放在了<code>guess</code>后面，让<code>lambda</code>返回值为<code>guess</code>，数字只出现了一次！</p>
<h2 id="Amazing-solution-2"><a href="#Amazing-solution-2" class="headerlink" title="Amazing solution 2:"></a>Amazing solution 2:</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint,seed</div><div class="line">seed(<span class="number">1</span>)</div><div class="line">guess = randint(<span class="number">1</span>,<span class="number">100</span>)</div><div class="line">seed(<span class="number">1</span>)</div></pre></td></tr></table></figure>
<blockquote>
<p><code>random.seed()</code>函数用于指定随机数生成所用算法开始的整数值，如果使用相同的<code>random.seed()</code>值，则每次生成的随机数都相同，如果不设置这个值，则系统根据时间来自己选择这个值，此时每次生成的随机数因时间差异而不同。</p>
</blockquote>
<p><strong><em>remark</em></strong>:这应该是出题者想看到的答案吧！</p>
<h2 id="Amazing-solution-3"><a href="#Amazing-solution-3" class="headerlink" title="Amazing solution 3:"></a>Amazing solution 3:</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">CheatingNumber</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__eq__</span><span class="params">(self, x)</span>:</span></div><div class="line">        <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line"></div><div class="line">guess = CheatingNumber()</div></pre></td></tr></table></figure>
<p><strong><em>remark</em></strong>:看不懂！:flushed:但是觉得很厉害！</p>
<h2 id="Amazing-solution-4"><a href="#Amazing-solution-4" class="headerlink" title="Amazing solution 4:"></a>Amazing solution 4:</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint, getstate, setstate</div><div class="line">st = getstate()</div><div class="line">guess = randint(<span class="number">1</span>,<span class="number">100</span>)</div><div class="line">setstate(st)</div></pre></td></tr></table></figure>
<blockquote>
<p><code>random.getstat()</code>函数返回获取当前内部生成器的状态；<code>random.setstat()</code>函数用来还原内部生成器的状态。</p>
</blockquote>
<p><strong><em>remark</em></strong>:记录下状态，有意思，学到了！</p>
<h1 id="Second-Kata-Find-the-divisors-6kyu"><a href="#Second-Kata-Find-the-divisors-6kyu" class="headerlink" title="Second Kata: Find the divisors!6kyu"></a>Second Kata: Find the divisors!<code>6kyu</code></h1><h2 id="Train-details-1"><a href="#Train-details-1" class="headerlink" title="Train details:"></a>Train details:</h2><p>请猛戳下方链接看题：</p>
<p><a href="https://www.codewars.com/kata/find-the-divisors" target="_blank" rel="external">https://www.codewars.com/kata/find-the-divisors</a></p>
<h2 id="My-solution-1"><a href="#My-solution-1" class="headerlink" title="My solution:"></a>My solution:</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">divisors</span><span class="params">(integer)</span>:</span></div><div class="line">	a = []</div><div class="line">	<span class="keyword">for</span> x <span class="keyword">in</span> range (<span class="number">2</span>,integer):</div><div class="line">		<span class="keyword">if</span> integer % x == <span class="number">0</span>:</div><div class="line">			a.append(x)</div><div class="line">	<span class="keyword">if</span> a == []:</div><div class="line">		<span class="keyword">return</span> str(integer)+<span class="string">" is prime"</span></div><div class="line">	<span class="keyword">else</span>:</div><div class="line">		<span class="keyword">return</span> a</div></pre></td></tr></table></figure>
<p><strong><em>remark</em></strong>:C语言还在我心中根深蒂固！</p>
<h2 id="Amazing-solution-1-1"><a href="#Amazing-solution-1-1" class="headerlink" title="Amazing solution 1:"></a>Amazing solution 1:</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">divisors</span><span class="params">(n)</span>:</span></div><div class="line">    <span class="keyword">return</span> [i <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">2</span>, n) <span class="keyword">if</span> <span class="keyword">not</span> n % i] <span class="keyword">or</span> <span class="string">'%d is prime'</span> % n</div></pre></td></tr></table></figure>
<blockquote>
<p><code>python</code>中的<code>and</code>和<code>or</code>运算符都是从左至右以此判断每一个表达式。<code>and</code>返回找到的第一个为假的表达式。如果表达式全部为真则返回最后一个表达式，<code>or</code>返回第一个为真的表达式，如果表达式全部为假则返回最后一个表达式。</p>
</blockquote>
<p><strong><em>remark</em></strong>:<code>or</code>和<code>and</code>其实就相当于二进制运算中的<code>或运算</code>和<code>与运算</code>！对表达式<code>n % i</code>的直接判断使得<code>if not</code>发挥了作用，而不是使用<code>if</code>判断表达式<code>n % i</code>是不是等于<code>0</code>，这里逻辑比较复杂！<code>python</code>的代码行数越少，证明写代码的人越强大！膜这位大神！</p>
]]></content>
      
        <categories>
            
            <category> Code </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Code </tag>
            
            <tag> Python </tag>
            
            <tag> Codewars </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello_Hexo]]></title>
      <url>/Hello/Hello-Hexo/</url>
      <content type="html"><![CDATA[<a id="more"></a>
<hr>
<p><strong><em>Article introduction</em></strong>:This article is to show something I want to say about Hexo!</p>
<hr>
<p>建立博客的目的：</p>
<ul>
<li>是为了将希望记住但不容易记住的东西记住；</li>
<li>也是为了防止自己重复踩同样的坑；</li>
<li>为了能够帮助别人不要进入相应的坑。</li>
</ul>
<p>希望能对来这里看我博客的人有所帮助！</p>
<p>Welcome！Thanks！</p>
<p>博文第一篇，介绍一下本博客的搭建过程。</p>
<p>其实在这个博客之前，本人还有一个博客：<a href="http://blog.turing.ml" target="_blank" rel="external">http://blog.turing.ml</a><br>是由<code>wordpress</code>+<code>lnmp</code>+<code>digitalocean</code>搭建，但是由于博文书写方面不便，文件管理费事，存储位置可靠性低等原因，使得许久没有放心使用，也就没有使用。</p>
<h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><p>通过朋友的博客：<a href="http://blog.wo-class.cn" target="_blank" rel="external">http://blog.wo-class.cn</a> 认识到了<code>Hexo</code>的好处，于是开始转投<code>Hexo</code>+<code>gh-pages</code>博客环境。</p>
<p>由于网上已经有很多关于<code>Hexo</code>+<code>gh-pages</code>博客搭建的教程了，所以在这里不多搭建过程，只是说说我的理解，方便日后的使用：</p>
<ol>
<li><p><code>Hexo</code>是一个<code>静态</code>网页文件的生成工具，<code>cli</code>形式;</p>
</li>
<li><p><code>Hexo</code>官网<a href="https://hexo.io/zh-cn/" target="_blank" rel="external">https://hexo.io/zh-cn/</a> 有中文版本的<code>文档</code>；</p>
</li>
<li><p><code>Hexo</code>官网中<code>文档</code>非常详细，为了更好地使用，建议将<code>文档</code>全部阅读一遍，不过也要选择性阅读。</p>
</li>
</ol>
<h2 id="小总结"><a href="#小总结" class="headerlink" title="小总结"></a>小总结</h2><h3 id="根目录下的文件夹的作用："><a href="#根目录下的文件夹的作用：" class="headerlink" title="根目录下的文件夹的作用："></a>根目录下的文件夹的作用：</h3><ul>
<li><code>source</code>：存放建立的markdown文件以及想要使用的图片等资源文件：<ul>
<li>使用路径<code>/</code>来表示<code>source</code>目录，就比如<code>source</code>目录下有一个图片名为<code>a.jpg</code>，则在<code>markdown</code>中可以使用路径<code>/a.jpg</code>来找到这个图片；</li>
<li><code>source</code>文件夹中的文件，如果可以被渲染，则渲染之后将生成的<code>html</code>等文件存放至根目录下<code>public</code>文件夹中，如果不能被渲染则直接将文件移动到根目录下的<code>public</code>文件夹中；</li>
</ul>
</li>
<li><code>public</code>：存放<code>hexo generate</code>命令生成的文件，生成的过程也就是渲染文件，移动文件的过程；</li>
<li><code>scaffolds</code>：存放了通过<code>hexo new &lt;layout&gt; &#39;filename&#39;</code>命令来创建文件时文件初始化状态的模板文件，这也是<code>hexo new &lt;layout&gt; &#39;filename&#39;</code>命令的意义所在。</li>
</ul>
<h3 id="根目录下的文件的作用："><a href="#根目录下的文件的作用：" class="headerlink" title="根目录下的文件的作用："></a>根目录下的文件的作用：</h3><ul>
<li><code>_config.yml</code>:<code>Hexo</code>的主要配置文件；</li>
</ul>
<h3 id="themes目录的作用："><a href="#themes目录的作用：" class="headerlink" title="themes目录的作用："></a><code>themes</code>目录的作用：</h3><ul>
<li>官方<code>Docs</code>中的<code>自定义</code>即为<code>themes</code>文件夹的制作方法；</li>
<li><code>themes</code>目录下存放了以主题名称为名称的文件夹。文件夹中存放了类似根目录中一样的文件夹和文件，作用与根目录下的文件相同，相互配合，另外：<ul>
<li>主题目录下的<code>layout</code>文件夹：定义渲染时所使用的页面整体排版；</li>
<li>主题目录下的<code>language</code>文件夹：通过<code>.yml</code>或者<code>.json</code>定义对所使用语言的转换。</li>
</ul>
</li>
</ul>
<hr>
<pre><code>最后，自我期待我接下来的博文！Thanks for Watching!
</code></pre>]]></content>
      
        <categories>
            
            <category> Hello </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hello </tag>
            
            <tag> Hexo </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
